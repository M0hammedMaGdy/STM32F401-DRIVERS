/*================================================================================
========================    - NVIC_interface.h				 ===========================
========================    - Created: 19/3/2022			 ===========================
========================    - Author: Mohammed Magdy   ===========================
========================    - Version : 1.0				     ===========================
================================================================================*/

/***************************** HEADER GUARD *****************************/
#ifndef	_NVIC_INTERFACE_H_
#define _NVIC_INTERFACE_H_

/***************************** LIB INCLUDES *****************************/
#include "STD_TYPES.h"
/****************************************************************************************************/
/*	Description :																					                                          */
/*	Function Enables the interrupt .											                                          */
/*	Arguments : interrupt ID (0 : 239) 										                                          */
/*	Returns   :	Void        															                                          */
/****************************************************************************************************/
void MNVIC_vENABLE_INT(u8 copy_u8int_num);
/****************************************************************************************************/
/****************************************************************************************************/
/****************************************************************************************************/
/*	Description :																					                                          */
/*	Function Disables the interrupt .											                                          */
/*	Arguments : interrupt ID (0 : 239) 										                                          */
/*	Returns   :	Void        															                                          */
/****************************************************************************************************/
void MNVIC_vDISABLE_INT(u8 copy_u8int_num);
/****************************************************************************************************/
/****************************************************************************************************/
/****************************************************************************************************/
/*	Description :																					                                          */  
/*	Function Sets the pending status of the interrupt .		                                          */  
/*	Arguments : interrupt ID (0 : 239) 										                                          */  
/*	Returns   :	Void        															                                          */  
/****************************************************************************************************/
void MNVIC_vSET_PENDING_INT(u8 copy_u8int_num);
/****************************************************************************************************/
/****************************************************************************************************/
/****************************************************************************************************/
/*	Description :																					                                          */
/*	Function Clears the pending status of the interrupt .	                                          */
/*	Arguments : interrupt ID (0 : 239) 										                                          */
/*	Returns   :	Void        															                                          */
/****************************************************************************************************/
void MNVIC_vCLR_PENDING_INT(u8 copy_u8int_num);
/****************************************************************************************************/
/****************************************************************************************************/
/****************************************************************************************************/
/*	Description :																					                                          */
/*	Function Gets the active status of the interrupt .		  	                                      */
/*	Arguments : interrupt ID (0 : 239) 											                                        */
/*	Returns   :	Status (1 for Active) || (0 for Non Active)                                         */
/****************************************************************************************************/
u8 	 MNVIC_vGET_ACTIVE_INT(u8 copy_u8int_num);
/****************************************************************************************************/
/****************************************************************************************************/
/****************************************************************************************************/
/*	Description :																					                                          */
/*	Function Generates interrupt by software .		  			                                          */
/*	Arguments : interrupt ID (0 : 239) 										                                          */
/*	Returns   :	Void									        						                                          */
/****************************************************************************************************/
void MNVIC_vSWI_TRIGEGR(u8 copy_u8int_num);
/****************************************************************************************************/
/****************************************************************************************************/
/****************************************************************************************************/
/*	Description :																				                                            */
/*	Function Sets the number of groups and sub-groups available .		                                */
/*	Arguments : Void				 											                                                  */
/*	Returns   :	Void									        								                                      */
/*	Note      :	Setting is done through configuration file	      		                              */
/****************************************************************************************************/
void MNVIC_vSET_GROUP_SUB(void);
/****************************************************************************************************/
/****************************************************************************************************/
/****************************************************************************************************/
/*	Description :																					                                          */
/*	Function Sets the priority (Group And Sub-Group) .		                                          */
/*	Arguments : 1- interrupt ID (0 : 239)                                                           */
/* 				2- Group Number                                                                           */
/* 				3- Sub-Group number											                                                  */
/*	Returns   :	Void									        						                                          */
/****************************************************************************************************/
/* Case no Sub-Groups	*/
#if GROUP_SUB_CONFIG	==		_4_GROUP_0_SUB_
void MNVIC_vSET_PRIORITY(u8 copy_u8int_num,u8 copy_u8group_num);
/* Case no Groups		*/
#elif GROUP_SUB_CONFIG	==		_0_GROUP_4_SUB_
void MNVIC_vMNVIC_vSET_PRIORITY(u8 copy_u8int_num,u8 copy_u8sub_num);

#else
void MNVIC_vSET_PRIORITY(u8 copy_u8int_num,u8 copy_u8group_num,u8 copy_u8sub_num);
#endif

/****************************************************************************************************/
/****************************************************************************************************/

/******************** Config MACROS ********************/
#define _4_GROUP_0_SUB_			3
#define _3_GROUP_1_SUB_			4
#define _2_GROUP_2_SUB_			5
#define _1_GROUP_3_SUB_			6
#define _0_GROUP_4_SUB_			7



#endif
